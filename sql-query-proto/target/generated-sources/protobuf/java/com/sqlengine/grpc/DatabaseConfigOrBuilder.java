// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: query_runner.proto

package com.sqlengine.grpc;

public interface DatabaseConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:queryrunner.DatabaseConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <code>string databaseConnectionName = 2;</code>
   * @return The databaseConnectionName.
   */
  java.lang.String getDatabaseConnectionName();
  /**
   * <code>string databaseConnectionName = 2;</code>
   * @return The bytes for databaseConnectionName.
   */
  com.google.protobuf.ByteString
      getDatabaseConnectionNameBytes();

  /**
   * <code>string provider = 3;</code>
   * @return The provider.
   */
  java.lang.String getProvider();
  /**
   * <code>string provider = 3;</code>
   * @return The bytes for provider.
   */
  com.google.protobuf.ByteString
      getProviderBytes();

  /**
   * <code>map&lt;string, string&gt; config = 4;</code>
   */
  int getConfigCount();
  /**
   * <code>map&lt;string, string&gt; config = 4;</code>
   */
  boolean containsConfig(
      java.lang.String key);
  /**
   * Use {@link #getConfigMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getConfig();
  /**
   * <code>map&lt;string, string&gt; config = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getConfigMap();
  /**
   * <code>map&lt;string, string&gt; config = 4;</code>
   */
  /* nullable */
java.lang.String getConfigOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; config = 4;</code>
   */
  java.lang.String getConfigOrThrow(
      java.lang.String key);

  /**
   * <code>bool isActive = 5;</code>
   * @return The isActive.
   */
  boolean getIsActive();

  /**
   * <code>string fallbackConfigId = 6;</code>
   * @return The fallbackConfigId.
   */
  java.lang.String getFallbackConfigId();
  /**
   * <code>string fallbackConfigId = 6;</code>
   * @return The bytes for fallbackConfigId.
   */
  com.google.protobuf.ByteString
      getFallbackConfigIdBytes();

  /**
   * <code>map&lt;string, string&gt; privacyFallbackConfig = 7;</code>
   */
  int getPrivacyFallbackConfigCount();
  /**
   * <code>map&lt;string, string&gt; privacyFallbackConfig = 7;</code>
   */
  boolean containsPrivacyFallbackConfig(
      java.lang.String key);
  /**
   * Use {@link #getPrivacyFallbackConfigMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getPrivacyFallbackConfig();
  /**
   * <code>map&lt;string, string&gt; privacyFallbackConfig = 7;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getPrivacyFallbackConfigMap();
  /**
   * <code>map&lt;string, string&gt; privacyFallbackConfig = 7;</code>
   */
  /* nullable */
java.lang.String getPrivacyFallbackConfigOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; privacyFallbackConfig = 7;</code>
   */
  java.lang.String getPrivacyFallbackConfigOrThrow(
      java.lang.String key);
}
